#!/bin/sh
# vim: set softtabstop=2 shiftwidth=2 expandtab :
# (c) 2024 KissCool

# Usage : cve_diff.sh cve_old.tsv cve_new.tsv
# list the CVE which disappeared between the old and the new TSV


awk '
  BEGIN {
    # input and output use tabulations, plus define a file header
    FS = OFS = "\t";
    print "Pakage", "CPE", "CVE", "Base_score", "Base_vector", "Env_vector", "Final_score", "Description";
  }

  # skip the files headers
  FNR <= 1 { next }  
 
  # FNR and NR are equal only for the first file
  # we populate an array of old CVE
  FNR==NR{
    gsub(/ /, "", $3);
    cve_old[$3]++;
    next;
  }
  
  # executed only for the second file
  # we populate an array of new CVE
  # if a CVE is in the old listing but not in the new one, then it has been "resolved"
  {
    gsub(/ /, "", $3);
    cve_new[$3]++;
  }

  # we compare the two listings
  # if a CVE is in the old listing but not in the new one, then it has been "solved"
  END {
    for (i in cve_old) {
      flag = 0;
      for (j in cve_new) {
        if (i == j) { flag = 1 }
      }
      if (flag == 0) { print i }
    }
  }
' $1 $2 | awk '
  # ignore headers
  FNR <= 1 { next }

  # first file (which is stdin here)
  # we populate an array of CVE
  FNR==NR{
    cve[$1]++;
    next;
  }

  # second file
  # nice output
  {
    if (cve[$3]) {
      print $1, $2, $3
    }
  }

  END {}
' - $1
# a bit of black magic here :
# as we feed data both from stdin (via the pipe) and a file,
# we need to instruct awk to read stdin via the '-' symbol.
# Otherwise it would only read the file.


