#!/bin/sh
# vim: set softtabstop=2 shiftwidth=2 expandtab :
# (c) 2019 KissCool

# invocation : cve_description.sh CVE-2019-8443

###############
# Discarded methods for documentation purpose only
###############
# for quick test
#zcat ./nvd/nvdcve-1.0-recent.json.gz | jq --arg id "$1" '.CVE_Items[] | select(.cve.CVE_data_meta.ID == $id) | .cve.description.description_data[0].value' | uniq

# simple method (~60s)
#zcat ./nvd/*.json.gz | jq --arg id "$1" '.CVE_Items[] | select(.cve.CVE_data_meta.ID == $id) | .cve.description.description_data[0].value' | uniq

# complex but not effective method (~94s for 4 processes, ~66s for 2 processes)
#find ./nvd/*.json.gz | xargs -n1 -I {} -P2 sh -c "zcat {} | jq --arg id $1 '.CVE_Items[] | select(.cve.CVE_data_meta.ID == \$id) | .cve.description.description_data[0].value'"

# intelligent method (~11s)
#year=`echo $1 | awk -F- '{print $2}'`
#zcat ./nvd/nvdcve-1.0-$year.json.gz | jq --arg id "$1" '.CVE_Items[] | select(.cve.CVE_data_meta.ID == $id) | .cve.description.description_data[0].value'

###############
# Efficient method
###############

# use of the reduction file (~1s)
cat ../nvd/cve_redux.json | jq --arg id "$1" '.[$id] //empty' | uniq
